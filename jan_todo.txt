Market making Simulation

Priorities:
- Matching Engine
- Log book
- Order Manager
- API
- Chart API
- (Bot skeleton)
- (Risc managment feature)

What to make:
- Order book
- Order matching engine
- Includes market dynamics
- Interface to Make bots

Matching Engine:
Contains order book.

Order book:
Extensive logging of matched orders.

Order Manager:
Contains wallet DB to track individual balances

Client gateway API:
Just to interact with the exchange

Charts:
Draw global charts from order book
Draw bot selected charts from order book filtered for bot orders.

Features to be included in the exchange

Feature	 	  	      	    	Explenation

- Potentially Middleware		gRPC
- Database				Postgres/SQLite (idk)
- Language				OCaml
- Semi real time exchange		Exchange should be avalaible for longer periods and continuously
       	    	 			Update price movements and accept orders.

- API					Should allow for python bots to interact with exchange
  					Should also have function to draw charts.
					
- (Potentailly flutter interface)	Maybe get flutter interface (or any other frontend framework)
  	       	       			to visualize charts and other metrics nicely.


Potential Additions:

- Maybe some encryption stuff		Maybe the Exchange offers some kind of security guarantee, so.
  	     				so that an adversary cannot manipulate bot orders to exchange

- Maybe exchange is server hosted	So that bots can be developed async and deployed real time.


